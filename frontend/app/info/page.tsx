"use client";

import { useEffect, useState } from "react";

const tabs = [
  {
    id: 0,
    title: "–ì–∞—Ä–∞–Ω—Ç–∏—è",
    content: [
      "–î–∞ –Ω–æ –Ω–µ—Ç! –ö–∞–∫ –±—ã —ç—Ç–æ –Ω–µ –∫–∞–∑–∞–ª–æ—Å—å. –£ –≤—Å–µ–≥–æ –µ—Å—Ç—å –≥–∞—Ä–∞–Ω—Ç–∏—è.",
      "–ò –∑–Ω–∞–µ—Ç–µ –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å, –Ω–∞–º —Ö–æ—á–µ—Ç—Å—è –≤—ã—Å—Ç—Ä–∞–∏–≤–∞—Ç—å —Å –≤–∞–º–∏ —á–µ—Å—Ç–Ω—ã–µ –∏ –æ—Ç–∫—Ä—ã—Ç—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –¥–æ–≤–µ—Ä–∏–µ. –ü–æ—ç—Ç–æ–º—É –º—ã —Å—Ç–∞—Ä–∞–µ–º—Å—è –∫–∞–∫ –º–æ–∂–Ω–æ —Ç—â–∞—Ç–µ–ª—å–Ω–µ–µ —Å–ª–µ–¥–∏—Ç—å –∑–∞ –ø–æ—Å—Ç–∞–≤–∫–∞–º–∏, –æ—Ç–±–∏—Ä–∞—è —Å–∞–º—ã–µ –ª—É—á—à–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –¥–ª—è —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –≤–∞—à–∏—Ö –æ—Å–æ–±–µ–Ω–Ω—ã—Ö –±—É–∫–µ—Ç–æ–≤, —á—Ç–æ–±—ã –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω–Ω—ã–º–∏ –≤ –∏—Ö –∫–∞—á–µ—Å—Ç–≤–µ.",
      "–°–ª—É—á–∞–µ—Ç—Å—è, —Ä–µ–¥–∫–æ, –Ω–æ –±—ã–≤–∞–µ—Ç, —á—Ç–æ —Ü–≤–µ—Ç–æ–∫ –ø—Ä–∏–µ—Ö–∞–ª —Å –∏–∑—ä—è–Ω–æ–º –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –±—ã–ª –∑–∞–º–µ—á–µ–Ω. –ü–æ—Å—Ç–∞–≤–ª–µ–Ω –≤ –±—É–∫–µ—Ç –∏ –±—ã—Å—Ç—Ä–æ –∑–∞–≤—è–ª. –ü–æ—ç—Ç–æ–º—É –º—ã –¥–ª—è —Å–µ–±—è —Ä–µ—à–∏–ª–∏ —á—Ç–æ, –≤ –Ω–∞—à–µ–π –º–∞—Å—Ç–µ—Ä—Å–∫–æ–π –±—É–¥–µ—Ç —Ü–≤–µ—Ç–æ—á–Ω–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è, –≤–µ–¥—å –¥–ª—è –Ω–∞—Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —á—Ç–æ–±—ã —Ü–≤–µ—Ç—ã —Ä–∞–¥–æ–≤–∞–ª–∏, –∫–∞–∫ –º–æ–∂–Ω–æ –¥–æ–ª—å—à–µ.  –ò –µ—Å–ª–∏ –≤–¥—Ä—É–≥ —Å–ª—É—á–∏–ª—Å—è –∫–∞–∑—É—Å, –û–Ω–∏ –±—É–¥—É—Ç –∑–∞–º–µ–Ω–µ–Ω—ã –±–µ–∑ –≤—Å—è–∫–∏—Ö ¬´–Ω–æ¬ª –∏–ª–∏ ¬´–µ—Å–ª–∏¬ª. –ü—Ä–æ—Å—Ç–æ —Å–æ–æ–±—â–∏—Ç–µ –Ω–∞–º –æ–± —ç—Ç–æ–º ü§ó.",
      "–ê –µ—Å–ª–∏ –≤—ã —É–∂–µ –ø—Ä–∏–¥—É–º–∞–ª–∏, —Å–≤–æ–π –æ—Å–æ–±–µ–Ω–Ω—ã—Ö –±—É–∫–µ—Ç –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ä–µ—à–∏–ª–∏ –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –æ—Ö–∞–ø–∫–æ–π —Ü–≤–µ—Ç–æ–≤ —Å–µ–±—è –∏–ª–∏ –±–ª–∏–∑–∫–∏—Ö –∑–∞–∫–∞–∑–∞—Ç—å –∏–∑ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ.",
    ],
  },
  {
    id: 1,
    title: "–£—Å–ª–æ–≤–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏ ",
    content: [
      "–ü–µ—Ä–µ–¥ –¥–æ—Å—Ç–∞–≤–∫–æ–π –º—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –≥–æ—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞, –µ—Å–ª–∏ –≤–¥—Ä—É–≥ –µ—Å—Ç—å —É—Ç–æ—á–Ω–µ–Ω–∏–µ –∏–ª–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏—Ö –º–æ–∂–Ω–æ —Å—Ä–∞–∑—É –∏—Å–ø—Ä–∞–≤–∏—Ç—å. –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ –≥–æ—Ä–æ–¥—É –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—É –æ—Ç 250 —Ä—É–±. (—Ç–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ —Ä–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∞–¥—Ä–µ—Å–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è) ",
      "–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ –æ–±–ª–∞—Å—Ç–∏ —Ä–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É–¥–∞–ª—ë–Ω–Ω–æ—Å—Ç–∏.",
    ],
  },
];

export default function Page() {
  const [activeTab, setActiveTab] = useState(0);

  return (
    <section className="order">
      <style jsx>{`
        .order {
          min-height: 95vh;
          grid-column: 1/4;
        }
        .wrapp {
          grid-column: 2/3;
          grid-row-gap: var(--space-small);
          height: fit-content;
        }
        h1 {
          grid-column: 1/4;
          justify-self: start;
        }
        nav {
          grid-column: 2/3;
          display: grid;
          grid-template-rows: min-content;
          text-align: left;
          grid-auto-flow: column;
          grid-gap: 1rem;
          width: fit-content;
        }
        .nav-button {
          border: none;
          outline: none;
          background: transparent;
          font-size: inherit;
        }
        .nav-button:not([disabled]) {
          cursor: pointer;
        }
        .nav-button.active {
          color: var(--main-gray);
        }
        .content {
          grid-column: 2/3;
        }
        .par {
          display: grid;
          grid-row-gap: 1rem;
        }
      `}</style>
      <div className="wrapp container">
        <nav aria-label="–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏">
          {tabs.map((tab) => (
            <button
              key={tab.id}
              onClick={() => setActiveTab(tab.id)}
              className={`${tab.id === activeTab ? "active" : ""} nav-button`}
              disabled={tab.id === activeTab}
            >
              {tab.title}
            </button>
          ))}
        </nav>
        <div className="content">
          {tabs.map((tab) => (
            <div
              key={tab.id}
              style={{ display: tab.id === activeTab ? "block" : "none" }}
            >
              <div className="par">
                {tab.content.map((p) => (
                  <span key={p}>{p}</span>
                ))}
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
}
